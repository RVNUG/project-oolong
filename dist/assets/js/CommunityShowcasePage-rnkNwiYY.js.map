{"version":3,"file":"CommunityShowcasePage-rnkNwiYY.js","sources":["../../../src/components/ProjectCard.tsx","../../../src/hooks/useProjects.ts","../../../src/pages/CommunityShowcasePage.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { Project } from '../types';\nimport '../assets/css/project-card.css';\n\ninterface ProjectCardProps {\n  project: Project;\n}\n\nconst ProjectCard = ({ project }: ProjectCardProps) => {\n  const [imageError, setImageError] = useState(false);\n  \n  const handleImageError = () => {\n    console.warn(`Failed to load project image: ${project.imageUrl}`);\n    setImageError(true);\n  };\n\n  return (\n    <div className=\"project-card\">\n      <div className=\"project-image\">\n        {imageError ? (\n          <div className=\"project-image-fallback\">\n            <div className=\"project-image-fallback-icon\">\n              <i className=\"fas fa-code\" aria-hidden=\"true\"></i>\n            </div>\n            <span>{project.title}</span>\n          </div>\n        ) : (\n          <img \n            src={project.imageUrl} \n            alt={`Screenshot of ${project.title}`} \n            onError={handleImageError} \n          />\n        )}\n      </div>\n      <div className=\"project-content\">\n        <h3 className=\"project-title\">{project.title}</h3>\n        <p className=\"project-author\">By {project.author}</p>\n        <p className=\"project-description\">{project.description}</p>\n        \n        <div className=\"project-tags\">\n          {project.tags.map((tag, index) => (\n            <span key={index} className=\"tag\">{tag}</span>\n          ))}\n        </div>\n        \n        <div className=\"project-links\">\n          {project.githubUrl && (\n            <a \n              href={project.githubUrl} \n              className=\"btn btn-outline\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              aria-label={`View ${project.title} GitHub repository`}\n            >\n              <i className=\"fab fa-github\" aria-hidden=\"true\"></i> GitHub\n            </a>\n          )}\n          \n          {project.liveUrl && (\n            <a \n              href={project.liveUrl} \n              className=\"btn btn-primary\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              aria-label={`View ${project.title} live site`}\n            >\n              <i className=\"fas fa-external-link-alt\" aria-hidden=\"true\"></i> View Live\n            </a>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectCard; ","import { useState, useEffect } from 'react';\nimport { Project } from '../types';\nimport { getResourceUrl } from '../utils/config';\n\n// Function to get correct image path\nconst getProjectImagePath = (imageName: string): string => {\n  return getResourceUrl(`images/projects/${imageName}`);\n};\n\n// Sample projects data - this would typically come from an API\nconst sampleProjects: Project[] = [\n  {\n    id: '1',\n    title: 'Blazor Component Library',\n    description: 'A comprehensive library of reusable Blazor components for modern web applications.',\n    author: 'Jane Smith',\n    githubUrl: 'https://github.com/janesmith/blazor-components',\n    liveUrl: 'https://blazor-components-demo.example.com',\n    imageUrl: getProjectImagePath('default-project.svg'),\n    category: 'library',\n    tags: ['Blazor', 'C#', 'Components', 'UI'],\n    dateAdded: '2023-10-15',\n    approved: true\n  },\n  {\n    id: '2',\n    title: '.NET Core API Starter Kit',\n    description: 'A starter template for building robust RESTful APIs with .NET Core and Entity Framework.',\n    author: 'John Doe',\n    githubUrl: 'https://github.com/johndoe/dotnet-api-starter',\n    liveUrl: 'https://api-starter-docs.example.com',\n    imageUrl: getProjectImagePath('default-project.svg'),\n    category: 'template',\n    tags: ['.NET Core', 'API', 'Entity Framework', 'REST'],\n    dateAdded: '2023-09-28',\n    approved: true\n  },\n  {\n    id: '3',\n    title: 'Xamarin Healthcare App',\n    description: 'A cross-platform mobile application for healthcare providers, featuring appointment scheduling and patient records.',\n    author: 'Sara Johnson',\n    githubUrl: 'https://github.com/sarajohnson/xamarin-healthcare',\n    liveUrl: '',\n    imageUrl: getProjectImagePath('default-project.svg'),\n    category: 'application',\n    tags: ['Xamarin', 'C#', 'Mobile', 'Healthcare'],\n    dateAdded: '2023-11-05',\n    approved: true\n  },\n  {\n    id: '4',\n    title: 'ML.NET Sentiment Analyzer',\n    description: 'A text sentiment analysis tool built with ML.NET that can classify text as positive, negative, or neutral.',\n    author: 'Michael Chen',\n    githubUrl: 'https://github.com/michaelchen/mlnet-sentiment',\n    liveUrl: 'https://mlnet-sentiment.example.com',\n    imageUrl: getProjectImagePath('default-project.svg'),\n    category: 'machine learning',\n    tags: ['ML.NET', 'AI', 'Sentiment Analysis', 'NLP'],\n    dateAdded: '2023-12-01',\n    approved: true\n  },\n  {\n    id: '5',\n    title: 'ASP.NET Core E-Commerce Platform',\n    description: 'A complete e-commerce solution built with ASP.NET Core, featuring product management, cart, and checkout.',\n    author: 'Alex Wilson',\n    githubUrl: 'https://github.com/alexwilson/aspnet-ecommerce',\n    liveUrl: 'https://aspnet-ecommerce-demo.example.com',\n    imageUrl: getProjectImagePath('default-project.svg'),\n    category: 'application',\n    tags: ['ASP.NET Core', 'E-Commerce', 'MVC', 'SQL Server'],\n    dateAdded: '2023-08-17',\n    approved: true\n  },\n  {\n    id: '6',\n    title: 'Unity Game Development Framework',\n    description: 'A C# framework for Unity developers to streamline game development with reusable components and patterns.',\n    author: 'Olivia Martinez',\n    githubUrl: 'https://github.com/oliviamartinez/unity-framework',\n    liveUrl: '',\n    imageUrl: getProjectImagePath('default-project.svg'),\n    category: 'framework',\n    tags: ['Unity', 'C#', 'Game Development', '3D'],\n    dateAdded: '2023-09-10',\n    approved: true\n  }\n];\n\ninterface UseProjectsResult {\n  loading: boolean;\n  error: string | null;\n  projects: Project[];\n}\n\nconst useProjects = (): UseProjectsResult => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n  const [projects, setProjects] = useState<Project[]>([]);\n\n  useEffect(() => {\n    const fetchProjects = async () => {\n      setLoading(true);\n      setError(null);\n      \n      try {\n        // In a real implementation, this would be an API call\n        // const response = await fetch('/api/projects');\n        // const data = await response.json();\n        \n        // For now, we'll use the sample data with a simulated delay\n        setTimeout(() => {\n          setProjects(sampleProjects);\n          setLoading(false);\n        }, 800);\n      } catch (err) {\n        setError('Failed to fetch projects. Please try again later.');\n        setLoading(false);\n        console.error('Error fetching projects:', err);\n      }\n    };\n\n    fetchProjects();\n  }, []);\n\n  return { loading, error, projects };\n};\n\nexport default useProjects; ","import { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport SEO from '../components/SEO';\nimport JsonLd from '../components/JsonLd';\nimport { createBreadcrumbStructuredData } from '../utils/structuredData';\nimport { getCanonicalUrl } from '../utils/seo';\nimport '../assets/css/community-showcase.css';\nimport ProjectCard from '../components/ProjectCard';\nimport useProjects from '../hooks/useProjects';\nimport logo from '../assets/images/roanoke-star-128-logo.png';\n\nconst CommunityShowcasePage = () => {\n  const { loading, error, projects } = useProjects();\n  const [filter, setFilter] = useState<string>('all');\n  const [searchTerm, setSearchTerm] = useState<string>('');\n  const location = useLocation();\n\n  // Filter projects by category and search term\n  const filteredProjects = projects.filter(project => {\n    const matchesFilter = filter === 'all' || project.category === filter;\n    const matchesSearch = project.title.toLowerCase().includes(searchTerm.toLowerCase()) || \n                           project.description.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                           project.author.toLowerCase().includes(searchTerm.toLowerCase());\n    return matchesFilter && matchesSearch;\n  });\n\n  // Get unique categories for the filter\n  const categories = ['all', ...new Set(projects.map(project => project.category))];\n\n  // Create breadcrumb structured data\n  const baseUrl = getCanonicalUrl();\n  const breadcrumbData = createBreadcrumbStructuredData([\n    { name: 'Home', url: baseUrl },\n    { name: 'Community Showcase', url: `${baseUrl}/showcase` }\n  ]);\n\n  return (\n    <div className=\"community-showcase-page\">\n      <SEO\n        title=\"Community Showcase - Roanoke Valley .NET User Group (RVNUG)\"\n        description=\"Explore projects, achievements, and contributions from members of the Roanoke Valley .NET User Group community. See what our talented developers are building with .NET and related technologies.\"\n        keywords=\"showcase, projects, community projects, .NET projects, developer showcase, portfolio, community achievements\"\n        pathName={location.pathname}\n      />\n      \n      {/* Add structured data */}\n      <JsonLd data={breadcrumbData} />\n      \n      <section className=\"hero\">\n        <img src={logo} alt=\"\" className=\"hero-logo\" aria-hidden=\"true\" />\n        <div className=\"hero-content\">\n          <h1>Community Showcase</h1>\n          <p>Highlighting projects and achievements from our community members</p>\n        </div>\n      </section>\n\n      <section className=\"showcase-content\">\n        <div className=\"showcase-intro\">\n          <h2>Featured Projects</h2>\n          <p>\n            The RVNUG Community Showcase highlights exceptional projects developed by our members. \n            These projects demonstrate the creativity, technical skills, and innovation within our community.\n          </p>\n          <p>\n            Each project featured here has been reviewed and approved by the RVNUG team for quality and relevance \n            to the .NET ecosystem.\n          </p>\n        </div>\n\n        <div className=\"showcase-filters\">\n          <div className=\"category-filter\">\n            <label htmlFor=\"category-select\">Filter by category:</label>\n            <select \n              id=\"category-select\" \n              value={filter} \n              onChange={(e) => setFilter(e.target.value)}\n            >\n              {categories.map(category => (\n                <option key={category} value={category}>\n                  {category.charAt(0).toUpperCase() + category.slice(1)}\n                </option>\n              ))}\n            </select>\n          </div>\n          \n          <div className=\"search-filter\">\n            <label htmlFor=\"search-input\">Search projects:</label>\n            <input\n              id=\"search-input\"\n              type=\"text\"\n              placeholder=\"Search by title, description or author\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n            />\n          </div>\n        </div>\n        \n        {loading ? (\n          <div className=\"loading\">Loading projects...</div>\n        ) : error ? (\n          <div className=\"error-message\">{error}</div>\n        ) : filteredProjects.length > 0 ? (\n          <div className=\"projects-grid\">\n            {filteredProjects.map(project => (\n              <ProjectCard key={project.id} project={project} />\n            ))}\n          </div>\n        ) : (\n          <div className=\"no-projects\">\n            <p>No projects found matching your criteria.</p>\n          </div>\n        )}\n      </section>\n\n      <section className=\"submit-project\">\n        <h2>Submit Your Project</h2>\n        <p>\n          Are you a member of the RVNUG community with a project you'd like to showcase?\n          We're always looking for interesting projects to feature!\n        </p>\n        <div className=\"submission-steps\">\n          <div className=\"step\">\n            <div className=\"step-number\">1</div>\n            <h3>Check Eligibility</h3>\n            <p>Your project should be related to .NET technologies or be of interest to our community.</p>\n          </div>\n          <div className=\"step\">\n            <div className=\"step-number\">2</div>\n            <h3>Prepare Materials</h3>\n            <p>Have your code repository, documentation, and screenshots ready.</p>\n          </div>\n          <div className=\"step\">\n            <div className=\"step-number\">3</div>\n            <h3>Submit for Review</h3>\n            <p>Fill out our submission form with your project details for review by our team.</p>\n          </div>\n        </div>\n        <a href=\"mailto:info@rvnug.org?subject=Project%20Showcase%20Submission\" className=\"btn btn-primary\">Submit Your Project</a>\n      </section>\n    </div>\n  );\n};\n\nexport default CommunityShowcasePage; "],"names":["ProjectCard","project","imageError","setImageError","useState","className","children","_jsx","_jsxs","title","src","imageUrl","alt","onError","handleImageError","author","description","tags","map","tag","index","githubUrl","href","target","rel","liveUrl","getProjectImagePath","imageName","getResourceUrl","sampleProjects","id","category","dateAdded","approved","CommunityShowcasePage","loading","error","projects","useProjects","setLoading","setError","setProjects","useEffect","async","setTimeout","err","fetchProjects","filter","setFilter","searchTerm","setSearchTerm","location","useLocation","filteredProjects","matchesFilter","matchesSearch","toLowerCase","includes","categories","Set","baseUrl","getCanonicalUrl","breadcrumbData","createBreadcrumbStructuredData","name","url","SEO","keywords","pathName","pathname","JsonLd","data","logo","htmlFor","value","onChange","e","charAt","toUpperCase","slice","type","placeholder","length"],"mappings":"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"}