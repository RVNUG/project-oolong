{"version":3,"file":"EventCard-CKoTnlFk.js","sources":["../../../src/components/EventCard.tsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport { MeetupEvent } from '../types';\nimport { formatTime } from '../utils/dateFormatters';\nimport EventCalendarButton from './EventCalendarButton';\nimport { isEventOnline, formatVenueAddress } from '../utils/venueUtils';\nimport '../assets/css/event-card.css';\nimport '../assets/css/custom-fixes.css';\n\ninterface EventCardProps {\n  event: MeetupEvent;\n}\n\nconst EventCard = ({ event }: EventCardProps) => {\n  // Create a date object from local_date and local_time fields, handling potential errors\n  let eventDate: Date | null = null;\n  try {\n    if (event.local_date && event.local_time) {\n      eventDate = new Date(`${event.local_date}T${event.local_time}`);\n      // Check if date is valid\n      if (isNaN(eventDate.getTime())) {\n        eventDate = null;\n      }\n    }\n  } catch (error) {\n    console.error('Error parsing event date/time:', error);\n  }\n  \n  // Format event description to handle HTML (limiting to a preview)\n  const createDescriptionPreview = (html: string) => {\n    // Create a temporary element to extract text from HTML\n    const temp = document.createElement('div');\n    temp.innerHTML = html;\n    const text = temp.textContent || temp.innerText || '';\n    \n    // Limit to 150 characters\n    return text.length > 150 ? text.substring(0, 150) + '...' : text;\n  };\n\n  // Safely format date components with fallbacks\n  const formatDatePart = (date: Date | null, options: Intl.DateTimeFormatOptions) => {\n    // Check if date is valid before trying to format it\n    if (!date || !(date instanceof Date) || isNaN(date.getTime())) {\n      return 'TBD'; // Return a fallback for invalid dates\n    }\n    return date.toLocaleString('default', options);\n  };\n\n  // Safely get date with fallback\n  const getDateDay = (date: Date | null) => {\n    if (!date || !(date instanceof Date) || isNaN(date.getTime())) {\n      return '--'; // Return a fallback for invalid dates\n    }\n    return date.getDate().toString();\n  };\n\n  // Check if the event is online\n  const isOnline = isEventOnline(event);\n  \n  // Determine if the event is in the past\n  const isPast = eventDate ? new Date() > eventDate : false;\n\n  // Safely format time for display\n  const displayTime = event.local_time ? formatTime(event.local_time) : 'Time TBD';\n\n  // Get formatted venue info\n  const venueAddress = formatVenueAddress(event.venue, isOnline);\n\n  return (\n    <div className={`event-card ${isOnline ? 'online-event' : ''} ${isPast ? 'past-event' : ''}`}>\n      <div className=\"event-date\">\n        <div className=\"event-month\">{formatDatePart(eventDate, { month: 'short' })}</div>\n        <div className=\"event-day\">{getDateDay(eventDate)}</div>\n        <div className=\"event-year\">{formatDatePart(eventDate, { year: 'numeric' })}</div>\n      </div>\n      \n      <div className=\"event-details\">\n        {isOnline && <div className=\"event-badge online-badge\">Online</div>}\n        {isPast && <div className=\"event-badge past-badge\">Past</div>}\n        \n        <h3 className=\"event-title\">\n          <Link to={`/event/${event.id}`}>{event.name}</Link>\n        </h3>\n        \n        <div className=\"event-meta\">\n          <span className=\"event-time\">\n            <i className=\"far fa-clock\"></i> {displayTime}\n          </span>\n          {event.venue && event.venue.name && !isOnline && (\n            <span className=\"event-location\">\n              <i className=\"fas fa-map-marker-alt\"></i> {event.venue.name}\n              {venueAddress && <span className=\"venue-city\">, {venueAddress}</span>}\n            </span>\n          )}\n          {isOnline && (\n            <span className=\"event-location online\">\n              <i className=\"fas fa-laptop\"></i> Online Event\n            </span>\n          )}\n        </div>\n        \n        <p className=\"event-description\">\n          {event.description ? createDescriptionPreview(event.description) : 'No description available'}\n        </p>\n        \n        <div className=\"event-actions\">\n          {!isPast ? (\n            <>\n              <a href={event.link} className=\"btn btn-primary\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <i className=\"fas fa-calendar-plus\"></i> RSVP on Meetup\n              </a>\n              <EventCalendarButton \n                event={event}\n                buttonLabel=\"Add to Calendar\"\n                className=\"btn btn-calendar\"\n              />\n            </>\n          ) : (\n            <span className=\"event-completed\">Event completed</span>\n          )}\n          <Link to={`/event/${event.id}`} className=\"btn btn-secondary\">\n            <i className=\"fas fa-info-circle\"></i> View Details\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EventCard; "],"names":["EventCard","event","eventDate","local_date","local_time","Date","isNaN","getTime","error","createDescriptionPreview","formatDatePart","date","options","toLocaleString","isOnline","isEventOnline","isPast","displayTime","formatTime","venueAddress","formatVenueAddress","venue","className","children","_jsxs","_jsx","month","getDate","toString","year","Link","to","id","name","description","html","temp","document","createElement","innerHTML","text","textContent","innerText","length","substring","_Fragment","href","link","target","rel","EventCalendarButton","buttonLabel","getDateDay"],"mappings":"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"}