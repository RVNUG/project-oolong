name: Update Meetup Events

on:
  schedule:
    - cron: '0 1 * * *'  # Runs daily at 1:00 AM UTC (different time than YouTube update)
  workflow_dispatch:  # Allows manual triggering

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests python-dotenv playwright

      - name: Install Playwright browsers
        run: |
          python -m playwright install chromium

      - name: Set up Git
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

      - name: Create .env file from secrets
        run: |
          echo "MEETUP_GROUP_NAME=${{ secrets.MEETUP_GROUP_NAME || 'roanoke-valley-net-user-group' }}" > .env

      - name: Get Meetup events and generate data
        run: |
          python scripts/meetup_events.py
          git add -f public/data/events.json
          git commit -m "Update Meetup events data" || echo "No changes to commit"


      - name: Get default branch
        id: default_branch
        uses: actions/github-script@v3
        with:
          script: |
            const { data: repo } = await github.repos.get({
              owner: context.repo.owner,
              repo: context.repo.repo
            })
            core.setOutput('default_branch', repo.default_branch)
        
      - name: Push changes
        run: git push origin ${{ steps.default_branch.outputs.default_branch }} || echo "No changes to push"
      
      - name: Check if changes were pushed
        id: check_changes
        run: |
          if [[ $(git log -1 --pretty=%B) == *"Update Meetup events data"* ]]; then
            echo "changes_pushed=true" >> $GITHUB_OUTPUT
          else
            echo "changes_pushed=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Trigger deploy workflow
        if: success() && steps.check_changes.outputs.changes_pushed == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'deploy.yml',
              ref: 'master'
            }); 