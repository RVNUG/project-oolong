name: Update YouTube Videos

on:
  schedule:
    - cron: '0 0 * * *'  # Runs daily at midnight UTC
  workflow_dispatch:  # Allows manual triggering

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'  # Or any version you need

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests python-dotenv

      - name: Set up Git
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

      - name: Create .env file from secrets
        run: |
          echo "YOUTUBE_DATA_API_KEY=${{ secrets.YOUTUBE_DATA_API_KEY }}" > .env
          echo "YOUTUBE_CHANNEL_ID=${{ secrets.RVNUG_YT_CHANNEL_ID }}" >> .env

      - name: Get YouTube videos and generate data
        env:
          YOUTUBE_DATA_API_KEY: ${{ secrets.YOUTUBE_DATA_API_KEY }}
          YOUTUBE_CHANNEL_ID: ${{ secrets.RVNUG_YT_CHANNEL_ID }}
        run: |
          python scripts/youtube_latest_videos.py
          git add -f public/data/videos.json
          git commit -m "Update video data" || echo "No changes to commit"

      - name: Get default branch
        id: default_branch
        uses: actions/github-script@v7
        with:
          script: |
            const { data: repo } = await github.repos.get({
              owner: context.repo.owner,
              repo: context.repo.repo
            })
            core.setOutput('default_branch', repo.default_branch)

      - name: Push changes
        id: push_changes
        run: |
          if git diff --quiet && git diff --staged --quiet; then
            echo "No changes to push"
            echo "push_successful=false" >> $GITHUB_OUTPUT
          else
            git push origin ${{ steps.default_branch.outputs.default_branch }}
            echo "push_successful=true" >> $GITHUB_OUTPUT
          fi

      - name: Trigger deploy workflow
        if: success() && steps.push_changes.outputs.push_successful == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'deploy.yml',
              ref: '${{ steps.default_branch.outputs.default_branch }}'
            });
